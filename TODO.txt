TO IMPLEMENT IN GO

1) GAME MECHANICS 
- Print game (DONE)
- Put piece on board (DONE) 
- go-game equality function (DONE)
- Legal Moves
    - Implement check for Ko (DONE)
    - Implement check for suicidal move (DONE)
- DO-MOVE! function (DONE)
    - Make a wrapper for put-piece that records what move was made (DONE)
- UNDO-MOVE! (DONE)

2) GROUP MECHANICS
- Print group (DONE)
- Group Capture (DONE)
- Group Merging (DONE)
- Group Seperating (for UNDO move)
- Group Life, set a flag when a group can no longer be captured

3) EVALUATION FUNCTION
- Evaluate each player's estimated score (DONE)
- Create static evaluation function for use with alpha beta (DONE)
- Rigorous evalutation for end game (DONE)

=============================================================================

Convert to Monte Carlo Tree Search
- Change board representation to a hashable integer
- ...

- Rapid Action Evaluation (RAVE) from monte-carlo handout




==============================================================================

1) Figure out if black is trying to loose. Ithink the way MCTS evaluates who wins
    might not be interacting with the way my game evaluates who won correctly.

2) Modify Go Game so the board reflects the same positions as the data the nn was
    trained on.

3) Modify training data to network such that it should only output the move that 
    was played not the entire board state.

4) Go through Python parser to ensure that the training data is only using the moves
  played by the winner of each game
